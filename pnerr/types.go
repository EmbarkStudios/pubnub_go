package pnerr

import (
	"fmt"
	"io"
)

// Error validating type or value of passed in params.
// For ex. Channel Missing, Subscribe Key Missing, etc.
// In most cases this happens due an incorrect SDK usage.
// If you don't switch over this error type, you should be sure enough
// that passed in params are correct.
type ValidationError struct {
	message string
}

func (e ValidationError) OrigErr() error {
	return nil
}

func (e ValidationError) Error() string {
	return fmt.Sprintf("pubnub/validation: %s", e.message)
}

func NewValidationError(msg string) *ValidationError {
	return &ValidationError{
		message: msg,
	}
}

// Server response has error code, for ex.:
// - BadRequest (400) - wrong params generated by SDK
// - Access Denied (403) - insufficient PAM permissions
type ServerError struct {
	StatusCode int
	Body       io.ReadCloser
}

func (e ServerError) Error() string {
	return fmt.Sprintf(
		"pubnub/server: Server respond with error code %d", e.StatusCode)
}

func NewServerError(statusCode int, body io.ReadCloser) *ServerError {
	return &ServerError{
		StatusCode: statusCode,
		Body:       body,
	}
}

// Something wrong with network connection.
type ConnectionError struct {
	message   string
	OrigError error
}

func (e ConnectionError) Error() string {
	return fmt.Sprintf("pubnub/connection: %s", e.message)
}

func NewConnectionError(msg string, origError error) *ConnectionError {
	return &ConnectionError{
		message:   msg,
		OrigError: origError,
	}
}

// Malformed request or issues with decoding encrypted message
type ResponseParsingError struct {
	message   string
	Body      io.ReadCloser
	OrigError error
}

func (e ResponseParsingError) Error() string {
	return fmt.Sprintf("pubnub/parsing: %s", e.message)
}

func NewResponseParsingError(msg string,
	body io.ReadCloser, origError error) *ResponseParsingError {

	return &ResponseParsingError{
		message:   msg,
		Body:      body,
		OrigError: origError,
	}
}
